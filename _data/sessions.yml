-
  id: 100
  title: "Rejestracja uczestników"
  place: "Hall"
  service: true
  description: ""
-
  id: 101
  title: "Rozpoczęcie konferencji"
  place: "Sala"
  service: true
  description: ""
-
  id: 102
  title: "Przerwa obiadowa"
  place: "Hall"
  service: true
  description: ""
-
  id: 103
  title: "Zakończenie konferencji"
  place: "Sala"
  service: true
  description: ""
-
  id: 104
  title: "Przerwa kawowa"
  place: "Hall"
  service: true
  description: ""

#-
#  id: 001
#  title: "Wkrótce..."
#  description: >
#    Więcej szczegółów wkrótce...
#  subtype: presentation
#  speakers: [1]

-
  id: 001
  title: "Thinking in Events"
  description: >
    Modelowanie złożonych problemów jest skomplikowane i często prowadzi do równie skomplikowanego kodu. Kontrolery, repozytoria, usługi, warunki biznesowe, formularze, widoki - wymagania biznesowe klienta często infiltrują te warstwy, wszystko jest ze sobą połączone, a kod staje się trudny do czytania, zrozumienia i rozwoju. A gdy potrzeba rozszerzyć lub zmodyfikować logikę biznesową, i trzeba „przekopać” się przez dziesiątki (a czasami i setki) linii kontrolerów czy serwisów, próbując zrozumieć sens i rolę wszystkich obiektów lub zidentyfikować zakres zmian, może nadszedł czas na inne podejście… Podejście „Thinking in Events” oznacza, że można być w pełni skoncentrowanym na problemie domenowym i implementacji testowalnej logiki biznesowej. Wykorzystując zdarzenia domenowe jako źródło informacji, skomplikowane technicznie elementy jak bazy danych czy web-frameworki stają się jedynie szczegółami implementacyjnymi, od których nie zależy zbyt wiele. 
    <br /><br />
    Podczas prezentacji zapoznasz się więc z technikami odkrywania eventów domenowych i wykorzystania ich zarówno w implementacji jak i na poziomie biznesowym, do lepszego zrozumienia i usprawnienia procesów. Porozmawiamy więc o wykorzystaniu eventów do komunikacji wewnątrz systemu, konceptach event/command/query busów, stosowaniu Event Sourcing do przechowywania historii zmian, czy też rozdzielaniu zapis od odczytu z wykorzystaniem CQRS, aby zwiększyć wydajność, skalowalność i bezpieczeństwo całego systemu. Będąc jednocześnie skoncentrowanym na realnym problemie biznesowym, bez rozpraszania zbędnymi detalami kodu.
  subtype: presentation
  speakers: [2]
